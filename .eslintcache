[{"/Users/Julia/trybe/Tarot-Vision/src/index.js":"1","/Users/Julia/trybe/Tarot-Vision/src/App.js":"2","/Users/Julia/trybe/Tarot-Vision/src/reportWebVitals.js":"3","/Users/Julia/trybe/Tarot-Vision/src/context/tarotProvider.js":"4","/Users/Julia/trybe/Tarot-Vision/src/pages/Login.js":"5","/Users/Julia/trybe/Tarot-Vision/src/pages/MainPage.js":"6","/Users/Julia/trybe/Tarot-Vision/src/context/tarotContext.js":"7","/Users/Julia/trybe/Tarot-Vision/src/services/GetAPI.js":"8"},{"size":543,"mtime":1608379095000,"results":"9","hashOfConfig":"10"},{"size":468,"mtime":1608379094000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608379095000,"results":"12","hashOfConfig":"10"},{"size":639,"mtime":1608381984000,"results":"13","hashOfConfig":"10"},{"size":1419,"mtime":1608382445000,"results":"14","hashOfConfig":"10"},{"size":497,"mtime":1608381821000,"results":"15","hashOfConfig":"10"},{"size":107,"mtime":1608379094000,"results":"16","hashOfConfig":"10"},{"size":259,"mtime":1608381871000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"evauey",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/Julia/trybe/Tarot-Vision/src/index.js",[],"/Users/Julia/trybe/Tarot-Vision/src/App.js",[],"/Users/Julia/trybe/Tarot-Vision/src/reportWebVitals.js",[],"/Users/Julia/trybe/Tarot-Vision/src/context/tarotProvider.js",[],"/Users/Julia/trybe/Tarot-Vision/src/pages/Login.js",["36"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport tarotContext from '../context/tarotContext';\nimport LogoTarotVision from '../images/LogoTarotVision.png';\nimport '../style/login.css';\n\nfunction Login() {\n  const [nameLogin, setNameLogin] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const { setNameUser } = useContext(tarotContext);\n\n  useEffect(() => {\n    const two = 2;\n    const minName = nameLogin.length >= two;\n    if (minName) {\n      setIsDisabled(false);\n    }\n  }, [nameLogin]);\n\n  const handlePath = () => {\n    window.location.replace('http://localhost:3000/main-page');\n  };\n\n  const handleRedirect = () => {\n    setNameUser(nameLogin);\n  };\n\n  return (\n    <main>\n      <div className=\"logoLogin\">\n      <img src={ LogoTarotVision } alt=\"Logo Tarot Vision\" />\n      </div>\n      <h1> What's your name, querent? </h1>\n      <form>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Name\"\n          onChange={({ target }) => setNameLogin(target.value)}\n        />\n        <div>\n          <Link to=\"/main-page\">\n            <button\n              type=\"button\"\n              disabled={isDisabled}\n              onClick={handleRedirect}\n            >\n              Start\n          </button>\n          </Link>\n        </div>\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","/Users/Julia/trybe/Tarot-Vision/src/pages/MainPage.js",["37","38","39","40"],"/Users/Julia/trybe/Tarot-Vision/src/context/tarotContext.js",[],"/Users/Julia/trybe/Tarot-Vision/src/services/GetAPI.js",[],["41","42"],{"ruleId":"43","severity":1,"message":"44","line":20,"column":9,"nodeType":"45","messageId":"46","endLine":20,"endColumn":19},{"ruleId":"43","severity":1,"message":"47","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"48","line":5,"column":36,"nodeType":"45","messageId":"46","endLine":5,"endColumn":44},{"ruleId":"49","severity":1,"message":"50","line":7,"column":13,"nodeType":"51","endLine":9,"endColumn":4},{"ruleId":"49","severity":1,"message":"52","line":9,"column":6,"nodeType":"53","endLine":9,"endColumn":8,"suggestions":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"no-unused-vars","'handlePath' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'nameUser' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getDataFromAPI'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-native-reassign",["60"],"no-negated-in-lhs",["61"],{"desc":"62","fix":"63"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getDataFromAPI]",{"range":"64","text":"65"},[267,269],"[getDataFromAPI]"]